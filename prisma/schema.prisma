generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Website {
  id           Int                  @id @default(autoincrement())
  title        String
  slug         String
  description  String?
  position     Int                  @default(0)
  url          String?
  status       String               @default("Building")
  hidden       Boolean              @default(false)
  userId       Int?
  eventName    String?
  customInputs WebsiteCustomInput[]
  timeZone     String?
  //price                   Int                    @default(0)
  //currency                String                 @default("usd")

  User User? @relation(fields: [userId], references: [id])
  @@unique([userId, slug])
}

enum WebsiteCustomInputType {
  TEXT      @map("text")
  TEXTLONG  @map("textLong")
  NUMBER    @map("number")
  BOOL      @map("bool")
}

model WebsiteCustomInput {
  id          Int                    @id @default(autoincrement())
  websiteId   Int
  website     Website                @relation(fields: [websiteId], references: [id])
  label       String
  type        WebsiteCustomInputType
  required    Boolean
  placeholder String                 @default("")
}

model User {
  id                  Int       @id @default(autoincrement())
  username            String?   @unique
  name                String?
  email               String    @unique
  emailVerified       Boolean   @default(false)
  password            String?
  bio                 String?
  avatar              String?
  timeZone            String    @default("Europe/London")
  weekStart           String    @default("Sunday")
  startTime           Int       @default(0)
  endTime             Int       @default(1440)
  bufferTime          Int       @default(0)
  hideBranding        Boolean   @default(false)
  theme               String?
  createdDate         DateTime  @default(now()) @map("created")
  websites            Website[]
  completedOnboarding Boolean   @default(false)
  locale              String?
  twoFactorSecret     String?
  twoFactorEnabled    Boolean   @default(false)
  plan                UserPlan  @default(PRO)
  brandColor          String    @default("#292929")

  @@map("users")
}

model VerificationRequest {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model ResetPasswordRequest {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String
  expires   DateTime
}

enum UserPlan {
  FREE
  TRIAL
  PRO
}
